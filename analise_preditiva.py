# 1 - Importando Libs usadas para an√°lise gr√°fica
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# 2 - Lendo a base de dados.csv e criando um dataframe
dataframe = pd.read_csv("dados/base_dados.csv")

# 3 - Pr√© processamento dos dados

# Removendo dados nulos (transformando em 0)
if dataframe.isnull().sum().sum() > 0:
  dataframe.fillna(0)

# Transformando colunas categ√≥ricas em boleanas
dataframe = pd.get_dummies(dataframe, columns=['g√™nero', 'fumante', 'regi√£o'], drop_first=True)

# Exibindo as 10 primeiras entradas (para ver se aparentemente est√° tudo ok üòú)
dataframe.head(10)

# 4 - Fun√ß√£o para gerar estat√≠sticas gerais sobre o dataset
dataframe.describe()

# 5 - Alterando o estilo dos gr√°ficos para facilitar visualiza√ß√£o
sns.set(style="darkgrid")

# 6 - An√°lises gr√°ficas: insights sobre os dados

# Mapa de Correla√ß√£o
plt.figure(figsize=(10, 6))
sns.heatmap(dataframe.corr(numeric_only=True), annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Mapa de Correla√ß√£o')
plt.show()

# Dispers√£o: IMC vs Encargos
plt.figure(figsize=(8, 5))
sns.scatterplot(data=dataframe, x='imc', y='encargos')
plt.title('IMC vs Encargos')
plt.show()

# Dispers√£o: Idade vs Encargos
plt.figure(figsize=(8, 5))
sns.scatterplot(data=dataframe, x='idade', y='encargos')
plt.title('Idade vs Encargos')
plt.show()

# Dispers√£o: Filhos vs Encargos
plt.figure(figsize=(8, 5))
sns.scatterplot(data=dataframe, x='filhos', y='encargos')
plt.title('Filhos vs Encargos')
plt.show()

# Boxplot: Fumante vs Encargos
plt.figure(figsize=(8, 5))
sns.boxplot(x='fumante_sim', y='encargos', data=dataframe)
plt.title('Encargos por Fumante')
plt.show()

# Boxplot: G√™nero vs Encargos
plt.figure(figsize=(8, 5))
sns.boxplot(x='g√™nero_masculino', y='encargos', data=dataframe)
plt.title('Encargos por G√™nero (0 = feminino, 1 = masculino)')
plt.show()

# Boxplot: Regi√£o Sudoeste vs Encargos
plt.figure(figsize=(8, 5))
sns.boxplot(x='regi√£o_sudoeste', y='encargos', data=dataframe)
plt.title('Encargos por Regi√£o Sudoeste')
plt.show()

# Boxplot: Regi√£o Sudeste vs Encargos
plt.figure(figsize=(8, 5))
sns.boxplot(x='regi√£o_sudeste', y='encargos', data=dataframe)
plt.title('Encargos por Regi√£o Sudeste')
plt.show()

# Boxplot: Regi√£o Noroeste vs Encargos
plt.figure(figsize=(8, 5))
sns.boxplot(x='regi√£o_noroeste', y='encargos', data=dataframe)
plt.title('Encargos por Regi√£o Noroeste')
plt.show()

# Pairplot com vari√°veis principais
sns.pairplot(dataframe[['idade', 'imc', 'filhos', 'encargos']])
plt.suptitle('Gr√°ficos de Dispers√£o em Pares', y=1.02)
plt.show()

# 7 - Libs usadas para criar o modelo preditivo

from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score

# 8 - Treinando o modelo

# Modelagem preditiva com Regress√£o Linear
X = dataframe.drop('encargos', axis=1)
y = dataframe['encargos']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

modelo = LinearRegression()
modelo.fit(X_train, y_train)

y_pred = modelo.predict(X_test)

# Avalia√ß√£o
print("MSE:", mean_squared_error(y_test, y_pred))
print("MAE:", mean_absolute_error(y_test, y_pred))
print("R¬≤:", r2_score(y_test, y_pred))

# Gr√°fico: Pre√ßo Real vs Previsto
plt.figure(figsize=(8, 5))
sns.scatterplot(x=y_test, y=y_pred)
plt.xlabel("Valor Real")
plt.ylabel("Valor Previsto")
plt.title("Valor Real vs Valor Previsto - Regress√£o Linear")
plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'r--')
plt.show()

# 9 - Libs de valida√ß√£o estat√≠stica

import statsmodels.api as sm

# 12. Valida√ß√£o estat√≠stica com statsmodels

# Convertendo colunas boleanas para integers
dataframe_numeric = dataframe.astype(int, errors='ignore')
X = dataframe_numeric.drop('encargos', axis=1)
y = dataframe_numeric['encargos']

X_const = sm.add_constant(X)
modelo_ols = sm.OLS(y, X_const).fit()

print(modelo_ols.summary())